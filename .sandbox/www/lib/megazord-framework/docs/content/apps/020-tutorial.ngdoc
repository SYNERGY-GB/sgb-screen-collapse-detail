@ngdoc overview
@name Tutorial 1 - Create an App

@description

# Tutorial - Basic app

For your first App, we will create an app that has a side menu with only two navigation options, a list of comapanies and a form.

1. First, we need to configure a parent that will contain the screens.  The container will be a side menu screen. We must specify in the screen parameters the menu options. 

	In the file screens.ts copy the following code

	    root: {
	        type: 'sgb-parent-menu#1.0',
	        default:true, 
	        dataSource: {
	            type: 'sgb-datasource-param',
	            params: {
	            }
	        },
	        params: {
	            menu: [
	            {title: 'Companies', screen: 'root.companies'},
	            {title: 'Form', screen: 'root.form'}
	            ]
	        }
	    }

	Now we have a side menu with the menu options, but we can't access any of these options because we have not defined the childScreens.

2. The next step is to use the list screen that already exists in the __Megazord Framework__ and you as developer configure to be used in your App.

	Let's add the screens attribute to the root screen so we can add the list screen.  Add the attribute

		screens: {
		}

	Now add the list screen and the corresponding configuration.  The screen will fetch the data from a service so we will define a path for the data source.  The screen will have a search box, an icon and we will use the *compact-left* option (using the megazord template directive) to display the companies.  Remember to remove the *default: true* from the root screen.

		screens: {
			companies: {
				type: 'sgb-screen-list',
				default: true, 
				dataSource: {
					type: 'sgb-datasource-json#1.0',
					params: {
						path: 'https://s3-us-west-2.amazonaws.com/megazord/tutorial/exhibitors.json'
					}
				},
				params:{
					showSearch: true, 
					showIcon: 'icon ion-chevron-right',
					templateType: '@compact-left'
				}
			}
		}

3. The next step is to add the detailed view of the companies.  Lets add the detailed view screen, add the following code below the companies screen. Don not forget too add the *","* after the companies screen.

		detail: {
			type: 'sgb-screen-detail ', 
			dataSource: {
				type: 'sgb-datasource-param',
				params: {
				}
			},
			params:{
				hideNavBar: false, 
				templateType: '@contact'
			}
		}
		
	Note that we added two parameters, the first parameter shows or hides the navigation bar of the application, the second parameter uses the megazord screen template to fetch the *contact* template to show the detailed view of each company. 

	We need to define the routing event *itemClick* as the documentation for the list screen states.  In routes.ts add the following code

		"root.companies" : {
			itemClick: 'root.detail'
		}

4. Now we only need our form screen, so lets add the last screen of our demo app.  Below the detail screen, add the following code 

		form: {
			type: 'sgb-screen-short-form', 
			dataSource: {
            	type: 'sgb-datasource-json#1.0',
	            params: {
	                path: 'https://s3-us-west-2.amazonaws.com/megazord/tutorial/form.json'
	            }
        	},
			params:{
			}
		}

	And that's it, with very little effort and no development, just configuration, we created a very basic App.