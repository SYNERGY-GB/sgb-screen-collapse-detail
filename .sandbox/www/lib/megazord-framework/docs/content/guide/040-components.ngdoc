@ngdoc overview
@name Component Philosophy

@description

# Component Philosophy

Megazord applications are composed of components. Components, depending on its type, assist in different ways: for example,
screen components provide logic and UI for an application screen to use, data source components provide data to be consumed
by an application screen.

Regardless of the component type, there are several cornerstones that all megazord components must follow:

1. Components are __reusable__: A component can (and will) be used by several applications, and they should not have any
   coupling to a particular application or data. In this sense must be general so any information that it is shown should now be tied to a particular use case. For instance, a view not coupled with the data.

2. Components are __configurable__: Every component can receive configuration (from the application's metadata). The
   component must adjust its behavior as configuration dictates. What can be configured is of course defined by the
   component, but the options should be wide enough to be able to use the component in the most common use cases. For instance, the data is not tied to any view, you just configure the data source and you get the data or you can configure a view to be used, you do not develop anything.

3. Components have __reasonable defaults__: While every component can be configured, it must not be necessary to do so
   for the component to function properly. This means that every component developer must define and document the default
   behaviors for the component. Take for example, a login screen (a screen component): The screen will allow the user
   to configure the regular expression to validate the user's name, but if no expression is given a reasonable default
   could be to simply check that the value is not empty.

4. Components have __no global state__: A single component can be used multiple times in an application, therefore it
   is dangerous to have global state in components as there is no surefire way to now when will you be called. If data or
   state needs to be passed around, facilities provided by the megazord framework (such as the `_router` service) can be
   used.

5. Components must be __well documented__: The `README.md` file of every component should describe what the component
   does, how it is used, what configuration parameters it has and what are the defaults. Additionally, if the component
   consumes data (e.g. screen components) the documentation must also indicate how the data must be structured.
